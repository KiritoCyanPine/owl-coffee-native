name: Xcode - Build and Analyze

on:
  push:
    branches: ['main']
  create:
  workflow_dispatch:

jobs:
  build_and_analyze:
    name: Build and analyse default scheme | test basic application workflow
    runs-on: macos-15

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.4.0'

      - name: Build
        env:
          scheme: ${{ 'default' }}
        run: |
          make clean
          make app

      - name: Check File Exist
        id: check_dist
        uses: andstor/file-existence-action@v3
        with:
          files: 'build/Release/Owl Coffee.app'

      - name: Verify Build File Exist
        if: steps.check_files.outputs.files_exists == 'false'
        # Only runs if all of the files exists
        run: |
          echo "File does not Exist!"
          exit 1

      - name: Locate .app bundle
        run: |
          # Set the path to your bundle, or discover it
          export APP_BUNDLE=./build/Release/Owl\ Coffee.app
          echo APP_BUNDLE = $APP_BUNDLE
          echo "BUNDLE_PATH=$APP_BUNDLE" >> $GITHUB_ENV

      - name: Check bundle structure
        run: |
          brew install tree
          tree "$BUNDLE_PATH"
          test -f "$BUNDLE_PATH/Contents/Info.plist"
          test -d "$BUNDLE_PATH/Contents/MacOS"
          test -d "$BUNDLE_PATH/Contents/Resources"

      - name: Validate Info.plist
        run: plutil -lint "$BUNDLE_PATH/Contents/Info.plist"

      - name: Check executable permissions
        run: |
          EXEC=Owl\ Coffee 
          ls -l "$BUNDLE_PATH/Contents/MacOS/$EXEC"
          test -x "$BUNDLE_PATH/Contents/MacOS/$EXEC"

      - name: Open App and Spy on Process
        run: |
          open "$BUNDLE_PATH"
          sleep 5 # give it a moment to launch

          # Run lsof and grep for "Owl Coffee.app"
          output="$(lsof | grep "$BUNDLE_PATH")"
          if [ -z "$output" ]; then
            echo "Owl Coffee.app is NOT running."
            exit 1
          else
            echo "Owl Coffee.app is running."
          fi

          pkill -aif "Owl Coffee"

      - name: Gatekeeper assessment
        run: spctl --assess --type execute --verbose=4 "$BUNDLE_PATH" || echo "Application is not Notarised by a valid Developer Certificate !!"

  create_distribution:
    name: Create Dmg and Release
    needs: build_and_analyze
    runs-on: macos-15
    if: |
      github.event.ref_type == 'branch' && startsWith(github.event.ref, 'release/owlcoffee-')

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.4.0'

      - name: Build Distributable
        env:
          scheme: ${{ 'default' }}
        run: |
          make clean
          make

      - name: Extract version from branch name
        id: extract_version
        run: |
          # GITHUB_REF contains 'refs/heads/release/oc-1.0.0-1'
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          # Split on '-', get everything after 'owlcoffee-'
          VERSION="${BRANCH_NAME#release/owlcoffee-}"
          TAG="v$VERSION"
          echo "branch=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Checkout branch
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.extract_version.outputs.branch }}

      - name: Create tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag ${{ steps.extract_version.outputs.tag }}
          git push origin ${{ steps.extract_version.outputs.tag }}

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ steps.extract_version.outputs.tag }}
          tag_name: ${{ steps.extract_version.outputs.tag }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          files: ./dist/OwlCoffee.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
